rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user is involved in the chat
    function isInvolvedInChat(chatId) {
      let participants = chatId.split('_');
      return isAuthenticated() && 
        (request.auth.uid == participants[0] || request.auth.uid == participants[1]);
    }
    
    function isFirstMessage(chatId) {
      let existingMessages = getAfter(/databases/$(database)/documents/chats/$(chatId)).data.messages;
      return existingMessages == null || existingMessages.size() == 0;
    }
    
    // Chat documents
    match /chats/{chatId} {
      allow read: if isInvolvedInChat(chatId);
      allow create: if isAuthenticated() && 
        request.resource.data.senderId == request.auth.uid &&
        request.resource.data.status == 'pending';
      allow update: if isAuthenticated() && 
        (resource.data.receiverId == request.auth.uid ||
         resource.data.senderId == request.auth.uid);
      allow delete: if false;
    }
    
    // Chat messages
    match /chats/{chatId}/messages/{messageId} {
      allow read: if isInvolvedInChat(chatId);
      allow create: if isAuthenticated() && 
        request.resource.data.senderId == request.auth.uid &&
        (
          isFirstMessage(chatId) ? 
            request.resource.data.message == "Hi" : 
            true
        );
      allow update, delete: if false;
    }
    
    // User profiles
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if request.auth.uid == userId;
    }

    // Chat rooms
    match /chats/{chatId} {
      allow read: if isSignedIn() && 
        exists(/databases/$(database)/documents/chats/$(chatId)/participants/$(request.auth.uid));
      allow create: if isSignedIn();
      allow update, delete: if false; // Prevent direct updates/deletes to chat documents
      
      // Chat participants subcollection
      match /participants/{userId} {
        allow read: if isSignedIn();
        allow write: if isSignedIn() && (
          request.auth.uid == userId || 
          exists(/databases/$(database)/documents/chats/$(chatId)/participants/$(request.auth.uid))
        );
      }
    }
  }
} 